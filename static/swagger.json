{
  "openapi": "3.0.3",
  "info": {
    "title": "xi.pe API",
    "description": "A high-performance pastebin service providing short, memorable codes using 4-6 character alphanumeric identifiers.",
    "version": "1.0.0",
    "contact": {
      "name": "Drew Streib",
      "email": "dtype@dtype.org"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "https://xi.pe",
      "description": "Production server"
    },
    {
      "url": "http://localhost:8080",
      "description": "Development server"
    }
  ],
  "paths": {
    "/": {
      "post": {
        "summary": "Store data",
        "description": "Stores pastebin data with 7-day expiration. Accepts raw text body by default or form data with ?input=form parameter.",
        "parameters": [
          {
            "name": "input",
            "in": "query",
            "description": "Input format type - use 'form' for URL-encoded form data",
            "schema": {
              "type": "string",
              "enum": ["form"]
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string",
                "maxLength": 2097152,
                "description": "Raw text content to store (default behavior)"
              },
              "examples": {
                "text_example": {
                  "summary": "Raw text storage",
                  "value": "Hello, world!"
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/CreateFormRequest"
              },
              "description": "Used with ?input=form parameter"
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully created",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "description": "URL of the created item (for raw text input)"
                }
              }
            },
            "headers": {
              "Set-Cookie": {
                "description": "Owner ID cookie for deletion access",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "303": {
            "description": "See Other - redirect for form submissions",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string",
                  "description": "Redirect to the created item page (for form input)"
                }
              }
            },
            "headers": {
              "Set-Cookie": {
                "description": "Owner ID cookie for deletion access",
                "schema": {
                  "type": "string"
                }
              },
              "Location": {
                "description": "Redirect URL to the created item page",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - content too large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "529": {
            "description": "Unable to generate unique code",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable - storage service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/{code}": {
      "get": {
        "summary": "View data",
        "description": "Views stored data. Returns HTML page for browsers, raw content for API clients.",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "description": "The short code (4-5 characters) or static page name",
            "schema": {
              "type": "string",
              "pattern": "^[a-zA-Z0-9]{4,5}$|^[a-zA-Z]+$"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Source indicator for success pages",
            "schema": {
              "type": "string",
              "enum": ["success"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Content found",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string",
                  "description": "HTML page showing data content"
                }
              },
              "text/plain": {
                "schema": {
                  "type": "string",
                  "description": "Raw data content for API clients"
                }
              }
            }
          },
          "400": {
            "description": "Invalid code format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Code not found or expired",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete data",
        "description": "Deletes stored data. Requires owner authentication via cookie.",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "description": "The short code to delete",
            "schema": {
              "type": "string",
              "pattern": "^[a-zA-Z0-9]{4,5}$"
            }
          }
        ],
        "security": [
          {
            "OwnerCookie": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - missing or invalid owner cookie",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CreateFormRequest": {
        "type": "object",
        "properties": {
          "data": {
            "type": "string",
            "description": "Text data to store (expires after 7 days)"
          },
          "format": {
            "type": "string",
            "enum": ["html"]
          }
        },
        "required": ["data"]
      },
      "DeleteResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["ok"]
          },
          "message": {
            "type": "string",
            "example": "deleted successfully"
          }
        },
        "required": ["status", "message"]
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["error"]
          },
          "description": {
            "type": "string",
            "description": "Error description"
          }
        },
        "required": ["status", "description"]
      }
    },
    "securitySchemes": {
      "OwnerCookie": {
        "type": "apiKey",
        "in": "cookie",
        "name": "id",
        "description": "128-bit owner token for deletion access"
      }
    }
  }
}